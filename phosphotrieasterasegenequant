# code for generating phosphotrieasterse genes per genome values

# forward qc'd reads were aligned against all gene calls from all MAGs using blastx and only top hits where kept

for i in *__R1_qtrimmed.fastq.gz; do diamond blastx -q "${i}" -d tbp_gene_analysis/NA22_DREP95-gene-clusters.dmnd -p 12 -f 6 -o "${i//_L00M__R1_qtrimmed.fastq.gz}_ag_NA22_MAGs.blastx"; awk '{print $1,$2}' "${i//_L00M__R1_qtrimmed.fastq.gz}_ag_NA22_MAGs.blastx" | awk '!a[$1]++' | awk '{print $2,$1}' | sort -k 1,1 | awk '{print $2,$1}' |  sed 's/ /\t/g' > "${i//_L00M__R1_qtrimmed.fastq.gz_}_ag_NA22_MAGs.blastx_tophits"; rm "${i//_L00M__R1_qtrimmed.fastq.gz}_ag_NA22_MAGs.blastx"; done

# microbe census was used to generate genome copies for each sample

for i in *__R1_qtrimmed.fastq.gz; do run_microbe_census.py -t 12 "${i}" "${i//__R1_qtrimmed.fastq.gz}_microbecensusout"; done

# taking the blastx output, we search for GC_00018205, which is the GC name of GC_00003819 in the all NA22 genome pangenome analysis

for i in *tophits; do samplename=$(echo "${i}" | sed 's/-.*//g' | rev | sed '0,/_/s//-/' |  sed '1 s/.*-//g' | rev ); grep -c "GC_00018205" "${i}" | awk -v var=$samplename '{print var,$1,"EXP2"}' >> tbp_gene_counts_exp2; done

for i in *tophits; do samplename=$(echo "${i}" | sed 's/-.*//g' | rev | sed '0,/_/s//-/' |  sed '1 s/.*-//g' | rev ); grep -c "GC_00018205" "${i}" | awk -v var=$samplename '{print var,$1,"EXP1"}' >> tbp_gene_counts_exp1; done


# this is merged in with genome copies values to normalize

sort -k 1,1 tbp_gene_counts_exp2 | join -1 1 -2 1 - genome_equivalents_microbecensus_exp2 | awk '{print $1,$2/$4,$3}' > tbp_analysis_genome_equivalent_normalized_exp2


# and these normalized values are then used for figure generation and statistical testing

 
